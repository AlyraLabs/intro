@mixin liquid-glass(
  $border-radius: 20px,
  $backdrop-blur: 5px, 
  $background-opacity: 0.01,
  $border-opacity: 0.01,
  $hover-scale: 1.06,
  $hover-scale-y: 0.97,
  $active-scale: 1.02,
  $active-scale-y: 0.99,
  $hover-border-change: true
) {
  background-color: rgba(var(--white), $background-opacity);
  border: 1px solid rgba(var(--white), $border-opacity);
  border-radius: $border-radius;
  backdrop-filter: blur($backdrop-blur) url(#displacementFilter);
  // -webkit-backdrop-filter: blur($backdrop-blur); // Убираем - багует в Safari при вложенности
  
  transition: all 250ms cubic-bezier(0.25, 0.8, 0.25, 1),
              transform 200ms cubic-bezier(0.175, 0.885, 0.32, 1.075),
              border-radius 280ms cubic-bezier(0.25, 0.46, 0.45, 0.94),
              backdrop-filter 220ms cubic-bezier(0.4, 0, 0.2, 1),
              box-shadow 250ms cubic-bezier(0.25, 0.8, 0.25, 1);
  
  transform-origin: center center;
  
  --glass-reflex-light: 1;
  --glass-reflex-dark: 1;
  --light-direction-x: 0.707;
  --light-direction-y: 0.707;
  --c-light: #fff;
  --c-dark: #000;
  
  box-shadow: 
    0px 1px 5px 0px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 10%), transparent),
    0px 6px 16px 0px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 8%), transparent);
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: $border-radius;
    pointer-events: none;
    
    box-shadow: 
      inset 0 0 0 1px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 10%), transparent),
      
      inset calc(var(--light-direction-x) * -3px) calc(var(--light-direction-y) * -3px) 0px -2px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 90%), transparent),
      inset calc(var(--light-direction-x) * -2px) calc(var(--light-direction-y) * -2px) 0px -1px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 80%), transparent),
      inset calc(var(--light-direction-x) * -4px) calc(var(--light-direction-y) * -4px) 2px -3px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 60%), transparent),
      
      inset calc(var(--light-direction-x) * 2px) calc(var(--light-direction-y) * 2px) 1px -1px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 8%), transparent),
      inset calc(var(--light-direction-x) * 3px) calc(var(--light-direction-y) * 3px) 2px -2px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 5%), transparent),
      
      inset calc(var(--light-direction-x) * 3px) calc(var(--light-direction-y) * 3px) 4px 0px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 12%), transparent),
      inset calc(var(--light-direction-x) * 2px) calc(var(--light-direction-y) * 2px) 0px -1px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 20%), transparent),
      inset calc(var(--light-direction-x) * 4px) calc(var(--light-direction-y) * 4px) 6px -2px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 20%), transparent),
      inset calc(var(--light-direction-x) * 5px) calc(var(--light-direction-y) * 5px) 3px -1px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 10%), transparent);
    
    opacity: 0.8;
    transition: opacity 200ms cubic-bezier(0.4, 0, 0.2, 1), 
                box-shadow 180ms cubic-bezier(0.25, 0.8, 0.25, 1),
                border-radius 280ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
    z-index: 1;
  }
  
  &:hover {
    transform: scale($hover-scale) scaleY($hover-scale-y);
    
    @if $hover-border-change {
      border-radius: calc($border-radius + 4px);
    }
    
    // Убираем backdrop-filter при hover - может конфликтовать с -webkit-backdrop-filter
    // backdrop-filter: blur(calc($backdrop-blur + 5px)) url(#displacementFilter);
    
    box-shadow: 
      0px 3px 12px 0px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 15%), transparent),
      0px 12px 30px 0px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 12%), transparent);
    
    &::before {
      opacity: 0.95;
      
      @if $hover-border-change {
        border-radius: calc($border-radius + 4px);
      }
    }
  }
  
  &:active {
    transform: scale($active-scale) scaleY($active-scale-y);
    
    @if $hover-border-change {
      border-radius: calc($border-radius + 1px);
    }
    
    &::before {
      opacity: 0.85;
      
      @if $hover-border-change {
        border-radius: calc($border-radius + 1px);
      }
    }
  }
}

@mixin liquid-glass-hover-only(
  $border-radius: 20px,
  $backdrop-blur: 5px, 
  $background-opacity: 0.01,
  $border-opacity: 0.01,
  $hover-scale: 1.06,
  $hover-scale-y: 0.97,
  $active-scale: 1.02,
  $active-scale-y: 0.99,
  $hover-border-change: true
) {
  // По умолчанию - невидимый эффект
  background-color: rgba(var(--white), 0);
  border: 1px solid rgba(var(--white), 0);
  border-radius: $border-radius;
  backdrop-filter: none;
  // -webkit-backdrop-filter: none; // Убираем - багует в Safari
  
  transition: all 600ms cubic-bezier(0.25, 0.8, 0.25, 1),
              transform 450ms cubic-bezier(0.175, 0.885, 0.32, 1.075),
              border-radius 600ms cubic-bezier(0.25, 0.46, 0.45, 0.94),
              backdrop-filter 550ms cubic-bezier(0.4, 0, 0.2, 1),
              box-shadow 600ms cubic-bezier(0.25, 0.8, 0.25, 1);
  
  transform-origin: center center;
  
  --glass-reflex-light: 1;
  --glass-reflex-dark: 1;
  --light-direction-x: 0.707;
  --light-direction-y: 0.707;
  --c-light: #fff;
  --c-dark: #000;
  
  box-shadow: none;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border-radius: $border-radius;
    pointer-events: none;
    opacity: 0;
    box-shadow: none;
    
    transition: opacity 550ms cubic-bezier(0.4, 0, 0.2, 1), 
                box-shadow 500ms cubic-bezier(0.25, 0.8, 0.25, 1),
                border-radius 600ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
    z-index: 1;
  }
  
  &:hover {
    background-color: rgba(var(--white), $background-opacity);
    border: 1px solid rgba(var(--white), $border-opacity);
    backdrop-filter: blur($backdrop-blur) url(#displacementFilter);
    // Не добавляем -webkit-backdrop-filter при hover для избежания конфликтов
    
    transform: scale($hover-scale) scaleY($hover-scale-y);
    
    @if $hover-border-change {
      border-radius: calc($border-radius + 4px);
    }
    
    box-shadow: 
      0px 3px 12px 0px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 15%), transparent),
      0px 12px 30px 0px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 12%), transparent);
    
    &::before {
      opacity: 0.95;
      
      box-shadow: 
        inset 0 0 0 1px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 10%), transparent),
        
        inset calc(var(--light-direction-x) * -3px) calc(var(--light-direction-y) * -3px) 0px -2px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 90%), transparent),
        inset calc(var(--light-direction-x) * -2px) calc(var(--light-direction-y) * -2px) 0px -1px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 80%), transparent),
        inset calc(var(--light-direction-x) * -4px) calc(var(--light-direction-y) * -4px) 2px -3px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 60%), transparent),
        
        inset calc(var(--light-direction-x) * 2px) calc(var(--light-direction-y) * 2px) 1px -1px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 8%), transparent),
        inset calc(var(--light-direction-x) * 3px) calc(var(--light-direction-y) * 3px) 2px -2px color-mix(in srgb, var(--c-light) calc(var(--glass-reflex-light) * 5%), transparent),
        
        inset calc(var(--light-direction-x) * 3px) calc(var(--light-direction-y) * 3px) 4px 0px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 12%), transparent),
        inset calc(var(--light-direction-x) * 2px) calc(var(--light-direction-y) * 2px) 0px -1px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 20%), transparent),
        inset calc(var(--light-direction-x) * 4px) calc(var(--light-direction-y) * 4px) 6px -2px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 20%), transparent),
        inset calc(var(--light-direction-x) * 5px) calc(var(--light-direction-y) * 5px) 3px -1px color-mix(in srgb, var(--c-dark) calc(var(--glass-reflex-dark) * 10%), transparent);
      
      @if $hover-border-change {
        border-radius: calc($border-radius + 4px);
      }
    }
  }
  
  &:active {
    transform: scale($active-scale) scaleY($active-scale-y);
    
    @if $hover-border-change {
      border-radius: calc($border-radius + 1px);
    }
    
    &::before {
      opacity: 0.85;
      
      @if $hover-border-change {
        border-radius: calc($border-radius + 1px);
      }
    }
  }
} 